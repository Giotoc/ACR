<?xml version="1.0" encoding="UTF-8"?>
<view>
	<inputs>

	</inputs>
	<conditions>

	</conditions>
	<actions>
		<action name="schema" component="database">
CREATE SCHEMA asyncode;
<!--CREATE PROCEDURAL LANGUAGE plpgsql;-->
		</action>
		<action name="installed" component="database">
SET search_path = asyncode, pg_catalog;
SET default_tablespace = '';
SET default_with_oids = false;

CREATE TABLE emails (
    email text NOT NULL,
    _user integer NOT NULL,
    approval_key text NOT NULL,
    approved boolean DEFAULT false NOT NULL,
    main boolean DEFAULT false NOT NULL
);

CREATE TABLE openids (
    openid text NOT NULL,
    _user integer NOT NULL
);

CREATE TABLE roles (
    role text NOT NULL,
    inherits text
);

CREATE TABLE users (
    id integer NOT NULL,
    create_date timestamp without time zone DEFAULT now(),
    modification_date timestamp without time zone DEFAULT now(),
    password text,
    role text DEFAULT 'user'::text NOT NULL,
    last_login timestamp with time zone DEFAULT now() NOT NULL
);

CREATE VIEW user_full AS
    SELECT users.id, users.password, users.role, emails.email, emails.approved FROM users, emails WHERE (users.id = emails._user);

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;

ALTER SEQUENCE users_id_seq OWNED BY users.id;
ALTER TABLE users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);

ALTER TABLE ONLY emails
    ADD CONSTRAINT email_pkey PRIMARY KEY (email);
ALTER TABLE ONLY openids
    ADD CONSTRAINT openid_pkey PRIMARY KEY (openid);
ALTER TABLE ONLY roles
    ADD CONSTRAINT roles_pkey PRIMARY KEY (role);
ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);
ALTER TABLE ONLY openids
    ADD CONSTRAINT "openid_FKEY" FOREIGN KEY (_user) REFERENCES users(id) ON UPDATE RESTRICT ON DELETE RESTRICT;
ALTER TABLE ONLY roles
    ADD CONSTRAINT roles_inherits_fkey FOREIGN KEY (inherits) REFERENCES roles(role) ON UPDATE RESTRICT ON DELETE CASCADE;
ALTER TABLE ONLY emails
    ADD CONSTRAINT "users_FKEY" FOREIGN KEY (_user) REFERENCES users(id) ON UPDATE RESTRICT ON DELETE SET NULL;
ALTER TABLE ONLY users
    ADD CONSTRAINT users_role_fkey FOREIGN KEY (role) REFERENCES roles(role) ON UPDATE RESTRICT ON DELETE SET NULL;
		</action>
	</actions>
</view>

